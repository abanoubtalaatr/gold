<?php

namespace {{ namespace }};

use Illuminate\Foundation\Http\FormRequest;

class {{ class }} extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'name' => 'required|string|max:255',
            'is_active' => 'boolean',
            
            // Multi-language support
            'translations' => 'required|array',
            'translations.*.name' => 'required|string|max:255',
        ];
    }

    /**
     * Get custom messages for validator errors.
     *
     * @return array<string, string>
     */
    public function messages(): array
    {
        return [
            'name.required' => __('validation.required', ['attribute' => __('name')]),
            'name.string' => __('validation.string', ['attribute' => __('name')]),
            'name.max' => __('validation.max.string', ['attribute' => __('name'), 'max' => 255]),
            
            'translations.required' => __('validation.required', ['attribute' => __('translations')]),
            'translations.array' => __('validation.array', ['attribute' => __('translations')]),
            'translations.*.name.required' => __('validation.required', ['attribute' => __('name')]),
            'translations.*.name.string' => __('validation.string', ['attribute' => __('name')]),
            'translations.*.name.max' => __('validation.max.string', ['attribute' => __('name'), 'max' => 255]),
        ];
    }

    /**
     * Get custom attributes for validator errors.
     *
     * @return array<string, string>
     */
    public function attributes(): array
    {
        return [
            'name' => __('name'),
            'is_active' => __('status'),
            'translations' => __('translations'),
            'translations.*.name' => __('name'),
        ];
    }
} 