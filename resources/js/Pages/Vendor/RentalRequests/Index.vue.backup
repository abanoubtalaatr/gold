<template>
    <Head title="Rental Requests" />

    <AuthenticatedLayout>
        <template #header>
            <h2 class="text-xl font-semibold leading-tight text-gray-800">
                {{ $t('Rental Requests') }}
            </h2>
        </template>

        <div class="py-12">
            <div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
                <div class="overflow-hidden bg-white shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-white border-b border-gray-200">
                        <!-- Filters -->
                        <!-- Filters -->
<div class="flex flex-wrap items-center justify-between mb-6 gap-4">
    <!-- Search Input (Full Width) -->
    <div class="w-full">
        <input
            v-model="form.search"
            type="text"
            class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            :placeholder="$t('Search by user or piece name...')"
            @input="debouncedSearch"
        />
    </div>
    <!-- Other Filters (3 Columns Each on Medium Screens) -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 w-full">
        <div class="md:w-full">
            <select
                v-model="form.branch_id"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                @change="applyFilters"
            >
                <option value="">{{ $t('All Branches') }}</option>
                <option v-for="branch in branches" :key="branch.id" :value="branch.id">
                    {{ branch.name }}
                </option>
            </select>
        </div>
        <div class="md:w-full">
            <select
                v-model="form.status"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                @change="applyFilters"
            >
                <option value="">{{ $t('All Statuses') }}</option>
                <option v-for="status in statuses" :key="status" :value="status">
                    {{ formatStatus(status) }}
                </option>
            </select>
        </div>
        <div class="md:w-full">
            <input
                v-model="form.piece_name"
                type="text"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                :placeholder="$t('Piece Name')"
                @input="applyFilters"
            />
        </div>
        <div class="md:w-full">
            <input
                v-model="form.price_min"
                type="number"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                :placeholder="$t('Min Price')"
                @input="applyFilters"
            />
        </div>
        <div class="md:w-full">
            <input
                v-model="form.price_max"
                type="number"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                :placeholder="$t('Max Price')"
                @input="applyFilters"
            />
        </div>
        <div class="md:w-full">
            <select
                v-model="form.date_filter"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                @change="applyFilters"
            >
                <option value="">{{ $t('All Dates') }}</option>
                <option value="today">{{ $t('Today') }}</option>
                <option value="week">{{ $t('This Week') }}</option>
                <option value="custom">{{ $t('Custom Range') }}</option>
            </select>
        </div>
        <div v-if="form.date_filter === 'custom'" class="md:w-full">
            <input
                v-model="form.date_from"
                type="date"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                @change="applyFilters"
            />
        </div>
        <div v-if="form.date_filter === 'custom'" class="md:w-full">
            <input
                v-model="form.date_to"
                type="date"
                class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                @change="applyFilters"
            />
        </div>
        <div class="md:w-full">
            <button
                @click="resetFilters"
                class="w-full px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500"
            >
                {{ $t('Reset') }}
            </button>
        </div>
    </div>
</div>

                        <!-- Orders Table -->
                        <h3 class="text-lg font-medium text-gray-900 mb-4">{{ $t('Orders') }}</h3>
                        <div v-if="orders?.data?.length > 0" class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Order ID') }}</th>
                                        
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('User') }}</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Gold Piece') }}</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Branch') }}</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Price') }}</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Status') }}</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{{ $t('Actions') }}</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    <tr v-for="order in orders.data" :key="order.id">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ order.id }}</td>
                                       
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <div class="flex items-center">
                                                <img
                                                    v-if="order.user?.avatar"
                                                    :src="order.user.avatar"
                                                    class="h-8 w-8 rounded-full object-cover mr-2"
                                                    alt="User avatar"
                                                />
                                                <div>
                                                    {{ order.user?.name || 'N/A' }}<br />
                                                    {{ order.user?.email || 'N/A' }}
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 text-sm text-gray-500">
                                            <button @click="showDetails(order)" class="text-indigo-600 hover:text-indigo-800 hover:underline font-medium">
                                                {{ order.goldPiece?.name || 'N/A' }}
                                            </button>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ order.branch?.name || 'N/A' }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ order.total_price }} {{ $t('SAR') }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span :class="['px-2 inline-flex text-xs leading-5 font-semibold rounded-full', getStatusClass(order.status)]">
                                                {{ formatStatus(order.status) }}
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                            <div class="flex items-center space-x-2 flex-wrap">
                                                <!-- Accept button for pending approval -->
                                                <button v-if="order.allowed_actions?.includes('approve')"
                                                    @click="openAcceptModal(order)"
                                                    class="px-3 py-1 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700 transition-colors duration-200">
                                                    {{ $t('Accept') }}
                                                </button>
                                                
                                                <!-- Reject button for pending approval -->
                                                <button v-if="order.allowed_actions?.includes('reject')"
                                                    @click="openRejectModal(order)"
                                                    class="px-3 py-1 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 transition-colors duration-200">
                                                    {{ $t('Reject') }}
                                                </button>

                                                <!-- Mark as sent button for approved orders -->
                                                <button v-if="order.allowed_actions?.includes('mark_as_sent')"
                                                    @click="markAsSent(order)"
                                                    class="px-3 py-1 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-colors duration-200">
                                                    {{ $t('Mark as Sent') }}
                                                </button>

                                                <!-- Confirm rental button for piece sent status -->
                                                <button v-if="order.allowed_actions?.includes('confirm_rental')"
                                                    @click="confirmRental(order)"
                                                    class="px-3 py-1 text-sm font-medium text-white bg-purple-600 rounded-md hover:bg-purple-700 transition-colors duration-200">
                                                    {{ $t('Confirm Rental') }}
                                                </button>

                                                <!-- Complete rental button for rented status -->
                                                <button v-if="order.allowed_actions?.includes('complete_rental')"
                                                    @click="completeRental(order)"
                                                    class="px-3 py-1 text-sm font-medium text-white bg-gray-600 rounded-md hover:bg-gray-700 transition-colors duration-200">
                                                    {{ $t('Complete Rental') }}
                                                </button>
                                                
                                                <!-- View invoice button -->
                                                <button
                                                    v-if="order.invoice"
                                                    @click="showInvoice(order)"
                                                    class="px-3 py-1 text-sm font-medium text-blue-600 border border-blue-600 rounded-md hover:bg-blue-50 transition-colors duration-200"
                                                >
                                                    {{ $t('View Invoice') }}
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <Pagination :links="orders.links" class="mt-6" />
                        </div>
                        <div v-else class="flex flex-col items-center justify-center py-12 text-gray-500">
                            <p class="text-xl font-semibold">{{ $t('No orders found.') }}</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Real-time notification toast -->
        <div v-if="showNotificationToast" 
             class="fixed top-4 right-4 bg-white border-l-4 border-green-500 shadow-lg rounded-lg p-4 max-w-md z-50 transform transition-all duration-300"
             :class="notificationToastClass">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-gray-900">{{ notificationMessage }}</p>
                </div>
                <div class="ml-auto pl-3">
                    <button @click="hideNotificationToast" class="text-gray-400 hover:text-gray-600">
                        <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Audio element for sound notifications -->
        <audio ref="notificationSound" preload="auto">
            <source src="/sounds/notification.mp3" type="audio/mpeg">
            <source src="/sounds/notification.wav" type="audio/wav">
        </audio>

        <!-- Details Modal -->
        <Modal :show="showDetailsModal" @close="closeDetailsModal">
            <div class="p-6">
                <h2 class="text-lg font-medium text-gray-900">{{ $t('Order Details') }}</h2>
                <div v-if="selectedOrder" class="mt-4">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <p><strong>{{ $t('Order ID') }}:</strong> {{ selectedOrder.id }}</p>
                            <p><strong>{{ $t('Order Type') }}:</strong> {{ selectedOrder.order_type === 'rental' ? $t('Rental') : $t('Sale') }}</p>
                            <p><strong>{{ $t('Created At') }}:</strong> {{ formatDate(selectedOrder.created_at) }}</p>
                            <p><strong>{{ $t('User') }}:</strong> {{ selectedOrder.user?.name || 'N/A' }}</p>
                            <p><strong>{{ $t('User Email') }}:</strong> {{ selectedOrder.user?.email || 'N/A' }}</p>
                            <p><strong>{{ $t('Piece Name') }}:</strong> {{ selectedOrder.goldPiece?.name || 'N/A' }}</p>
                            <p><strong>{{ $t('Description') }}:</strong> {{ selectedOrder.goldPiece?.description || 'N/A' }}</p>
                            <p><strong>{{ $t('Weight') }}:</strong> {{ selectedOrder.goldPiece?.weight || 'N/A' }} {{ $t('grams') }}</p>
                            <p><strong>{{ $t('Carat') }}:</strong> {{ selectedOrder.goldPiece?.carat || 'N/A' }}</p>
                            <p v-if="selectedOrder.start_date"><strong>{{ $t('Start Date') }}:</strong> {{ formatDate(selectedOrder.start_date) }}</p>
                            <p v-if="selectedOrder.end_date"><strong>{{ $t('End Date') }}:</strong> {{ formatDate(selectedOrder.end_date) }}</p>
                            <p><strong>{{ $t('Price') }}:</strong> {{ selectedOrder.total_price }} {{ $t('SAR') }}</p>
                            <p><strong>{{ $t('Status') }}:</strong> {{ formatStatus(selectedOrder.status) }}</p>
                            <p><strong>{{ $t('Branch') }}:</strong> {{ selectedOrder.branch?.name || 'N/A' }}</p>
                        </div>
                        <div>
                            <p><strong>{{ $t('Images') }}:</strong></p>
                            <div v-if="selectedOrder.goldPiece?.images?.length" class="flex flex-wrap gap-2 mt-2">
                                <img
                                    v-for="image in selectedOrder.goldPiece.images"
                                    :key="image.id"
                                    :src="'/storage/' + image.path"
                                    class="h-20 w-20 object-cover rounded border"
                                    alt="Gold piece image"
                                />
                            </div>
                            <p v-else class="text-gray-500 mt-2">{{ $t('No images available') }}</p>
                        </div>
                    </div>
                </div>
                <div class="mt-6 flex justify-end">
                    <button
                        @click="closeDetailsModal"
                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                    >
                        {{ $t('Close') }}
                    </button>
                </div>
            </div>
        </Modal>

        <!-- Accept Order Modal -->
        <Modal :show="showAcceptModal" @close="closeAcceptModal" max-width="lg">
            <div class="p-6">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-lg font-medium text-gray-900">{{ $t('Accept Order') }}</h2>
                    <button @click="closeAcceptModal" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>

                <div v-if="selectedOrder" class="mb-4 p-4 bg-gray-50 rounded-lg">
                    <div class="text-sm text-gray-600">
                        <p><strong>{{ $t('Order ID') }}:</strong> {{ selectedOrder.id }}</p>
                        <p><strong>{{ $t('User') }}:</strong> {{ selectedOrder.user?.name || 'N/A' }}</p>
                        <p><strong>{{ $t('Gold Piece') }}:</strong> {{ selectedOrder.goldPiece?.name || 'N/A' }}</p>
                        <p><strong>{{ $t('Price') }}:</strong> {{ selectedOrder.total_price }} {{ $t('SAR') }}</p>
                    </div>
                </div>

                <p class="mb-4 text-sm text-gray-600">{{ $t('Select a branch for this order.') }}</p>

                <form @submit.prevent="acceptOrder">
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">{{ $t('Branch') }}</label>
                        <select 
                            v-model="acceptForm.branch_id"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                            :class="{ 'border-red-500': acceptForm.errors.branch_id }"
                        >
                            <option value="">{{ $t('Select a branch') }}</option>
                            <option v-for="branch in branches" :key="branch.id" :value="branch.id">
                                {{ branch.name }}
                            </option>
                        </select>
                        <p v-if="acceptForm.errors.branch_id" class="mt-1 text-sm text-red-600">
                            {{ acceptForm.errors.branch_id }}
                        </p>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4 border-t">
                        <button 
                            type="button" 
                            @click="closeAcceptModal"
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors duration-200"
                        >
                            {{ $t('Cancel') }}
                        </button>
                        <button 
                            type="submit" 
                            :disabled="acceptForm.processing || !acceptForm.branch_id"
                            class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200"
                        >
                            <span v-if="acceptForm.processing" class="flex items-center">
                                <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                {{ $t('Processing...') }}
                            </span>
                            <span v-else>{{ $t('Accept') }}</span>
                        </button>
                    </div>
                </form>
            </div>
        </Modal>

        <!-- Reject Order Modal -->
        <Modal :show="showRejectModal" @close="closeRejectModal">
            <div class="p-6">
                <div class="flex items-center justify-center mb-4">
                    <div class="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-red-100">
                        <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                        </svg>
                    </div>
                </div>
                <div class="text-center">
                    <h2 class="text-lg font-medium text-gray-900 mb-2">{{ $t('Reject Order') }}</h2>
                    <p class="mb-4 text-sm text-gray-600">
                        {{ $t('Are you sure you want to reject this order? This action cannot be undone.') }}
                    </p>
                    <div v-if="selectedOrder" class="bg-gray-50 rounded-lg p-4 mb-4">
                        <div class="text-sm text-gray-600">
                            <p><strong>{{ $t('Order ID') }}:</strong> {{ selectedOrder.id }}</p>
                            <p><strong>{{ $t('User') }}:</strong> {{ selectedOrder.user?.name || 'N/A' }}</p>
                            <p><strong>{{ $t('Gold Piece') }}:</strong> {{ selectedOrder.goldPiece?.name || 'N/A' }}</p>
                            <p><strong>{{ $t('Price') }}:</strong> {{ selectedOrder.total_price }} {{ $t('SAR') }}</p>
                        </div>
                    </div>
                </div>

                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" @click="closeRejectModal"
                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors duration-200">
                        {{ $t('Cancel') }}
                    </button>
                    <button @click="rejectOrder"
                        class="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 transition-colors duration-200">
                        {{ $t('Reject Order') }}
                    </button>
                </div>
            </div>
        </Modal>

        <!-- Invoice Modal -->
        <Modal :show="showInvoiceModal" @close="closeInvoiceModal">
            <div class="p-6">
                <h2 class="text-lg font-medium text-gray-900">{{ $t('Electronic Invoice') }}</h2>
                <div v-if="selectedOrder?.invoice" class="mt-4">
                    <p><strong>{{ $t('Order ID') }}:</strong> {{ selectedOrder.invoice.order_id }}</p>
                    <p><strong>{{ $t('User Name') }}:</strong> {{ selectedOrder.invoice.user_name }}</p>
                    <p><strong>{{ $t('Piece Name') }}:</strong> {{ selectedOrder.invoice.piece_name }}</p>
                    <p><strong>{{ $t('Service Type') }}:</strong> {{ selectedOrder.invoice.service_type === 'rent' ? $t('Rental') : $t('Sale') }}</p>
                    <p v-if="selectedOrder.invoice.rental_days"><strong>{{ $t('Rental Days') }}:</strong> {{ selectedOrder.invoice.rental_days }}</p>
                    <p v-if="selectedOrder.invoice.start_date"><strong>{{ $t('Start Date') }}:</strong> {{ formatDate(selectedOrder.invoice.start_date) }}</p>
                    <p v-if="selectedOrder.invoice.end_date"><strong>{{ $t('End Date') }}:</strong> {{ formatDate(selectedOrder.invoice.end_date) }}</p>
                    <p><strong>{{ $t('Total Price') }}:</strong> {{ selectedOrder.invoice.total_price }} {{ $t('SAR') }}</p>
                    <p><strong>{{ $t('Branch') }}:</strong> {{ selectedOrder.invoice.branch_name }}</p>
                    <p><strong>{{ $t('Created At') }}:</strong> {{ formatDate(selectedOrder.invoice.created_at) }}</p>
                    <p><strong>{{ $t('Status') }}:</strong> {{ formatStatus(selectedOrder.invoice.status) }}</p>
                </div>
                <div class="mt-6 flex justify-end">
                    <button
                        @click="closeInvoiceModal"
                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                    >
                        {{ $t('Close') }}
                    </button>
                </div>
            </div>
        </Modal>
    </AuthenticatedLayout>
</template>

<script setup>
import { ref, onMounted, onUnmounted } from 'vue';
import { Head, useForm, router, usePage } from '@inertiajs/vue3';
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout.vue';
import Pagination from '@/Components/Pagination.vue';
import Modal from '@/Components/Modal.vue';
import InputLabel from '@/Components/InputLabel.vue';
import InputError from '@/Components/InputError.vue';
import PrimaryButton from '@/Components/PrimaryButton.vue';
import debounce from 'lodash/debounce';

const props = defineProps({
    orders: {
        type: Object,
        default: () => ({ data: [], links: [] }),
    },
    branches: {
        type: Array,
        default: () => [],
    },
    filters: {
        type: Object,
        default: () => ({}),
    },
    statuses: {
        type: Array,
        default: () => [],
    },
});

const page = usePage();
const form = useForm({
    search: props.filters.search || '',
    service_type: props.filters.service_type || '',
    branch_id: props.filters.branch_id || '',
    status: props.filters.status || '',
    piece_name: props.filters.piece_name || '',
    description: props.filters.description || '',
    price_min: props.filters.price_min || '',
    price_max: props.filters.price_max || '',
    date_filter: props.filters.date_filter || '',
    date_from: props.filters.date_from || '',
    date_to: props.filters.date_to || '',
});

const showDetailsModal = ref(false);
const showInvoiceModal = ref(false);
const selectedOrder = ref(null);
const showAcceptModal = ref(false);
const showRejectModal = ref(false);
const acceptForm = useForm({
    branch_id: '',
});

// Real-time notification state
const showNotificationToast = ref(false);
const notificationMessage = ref('');
const notificationToastClass = ref('');
const notificationSound = ref(null);
let echo = null;

const debouncedSearch = debounce(() => {
    applyFilters();
}, 300);

const applyFilters = () => {
    form.get(route('vendor.rental-requests.index'), {
        preserveState: true,
        preserveScroll: true,
    });
};

const resetFilters = () => {
    form.search = '';
    form.service_type = '';
    form.branch_id = '';
    form.status = '';
    form.piece_name = '';
    form.description = '';
    form.price_min = '';
    form.price_max = '';
    form.date_filter = '';
    form.date_from = '';
    form.date_to = '';

    router.get(route('vendor.rental-requests.index'), {}, {
        preserveState: false,
        preserveScroll: true,
        replace: true
    });
};

const getStatusClass = (status) => {
    switch (status) {
        case 'pending_approval':
            return 'bg-yellow-100 text-yellow-800';
        case 'approved':
            return 'bg-green-100 text-green-800';
        case 'piece_sent':
            return 'bg-blue-100 text-blue-800';
        case 'rented':
            return 'bg-purple-100 text-purple-800';
        case 'available':
            return 'bg-gray-100 text-gray-800';
        case 'sold':
            return 'bg-red-100 text-red-800';
        case 'payment_confirmed':
            return 'bg-blue-100 text-blue-800';
        case 'rejected':
            return 'bg-red-100 text-red-800';
        default:
            return 'bg-gray-100 text-gray-800';
    }
};

const formatStatus = (status) => {
    
    return status
        .split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');
};

const formatDate = (date) => {
    return date ? new Date(date).toLocaleString() : 'N/A';
};

const showDetails = (order) => {
    selectedOrder.value = order;
    showDetailsModal.value = true;
};

const closeDetailsModal = () => {
    showDetailsModal.value = false;
    selectedOrder.value = null;
};

const showInvoice = (order) => {
    selectedOrder.value = order;
    showInvoiceModal.value = true;
};

const closeInvoiceModal = () => {
    showInvoiceModal.value = false;
    selectedOrder.value = null;
};

const openAcceptModal = (order) => {
    selectedOrder.value = order;
    // Reset the form before opening the modal
    acceptForm.reset();
    acceptForm.clearErrors();
    showAcceptModal.value = true;
};

const closeAcceptModal = () => {
    showAcceptModal.value = false;
    selectedOrder.value = null;
    // Reset the form when closing
    acceptForm.reset();
    acceptForm.clearErrors();
};

const openRejectModal = (order) => {
    selectedOrder.value = order;
    showRejectModal.value = true;
};

const closeRejectModal = () => {
    showRejectModal.value = false;
    selectedOrder.value = null;
};

const acceptOrder = () => {
    console.log('Accept order function called');
    console.log('Selected order:', selectedOrder.value);
    console.log('Branch ID:', acceptForm.branch_id);
    console.log('Branches available:', props.branches);
    
    if (!acceptForm.branch_id) {
        console.log('No branch selected');
        acceptForm.setError('branch_id', 'Please select a branch');
        return;
    }
    
    if (!selectedOrder.value) {
        console.error('No order selected');
        return;
    }
    
    console.log('Submitting form...');
    acceptForm.post(route('vendor.rental-requests.accept', { order: selectedOrder.value.id }), {
        onStart: () => {
            console.log('Request started');
        },
        onSuccess: (response) => {
            console.log('Request successful:', response);
            closeAcceptModal();
            applyFilters();
        },
        onError: (errors) => {
            console.error('Validation errors:', errors);
            // Errors are automatically handled by Inertia
        },
        onFinish: () => {
            console.log('Request finished');
        }
    });
};

const rejectOrder = () => {
    router.post(route('vendor.rental-requests.reject', { order: selectedOrder.value.id }), {}, {
        preserveScroll: true,
        onSuccess: () => {
            closeRejectModal();
            applyFilters();
        },
        onError: (errors) => {
            console.error('Error rejecting order:', errors);
        }
    });
};

const markAsSent = (order) => {
    router.post(route('vendor.rental-requests.mark-sent', { order: order.id }), {}, {
        preserveScroll: true,
        onSuccess: () => {
            applyFilters();
        },
        onError: (errors) => {
            console.error('Error marking order as sent:', errors);
        }
    });
};

const confirmRental = (order) => {
    router.post(route('vendor.rental-requests.confirm-rental', { order: order.id }), {}, {
        preserveScroll: true,
        onSuccess: () => {
            applyFilters();
        },
        onError: (errors) => {
            console.error('Error confirming rental:', errors);
        }
    });
};

const completeRental = (order) => {
    if (confirm('Are you sure you want to complete this rental? This action will mark the item as available again.')) {
        router.post(route('vendor.rental-requests.complete-rental', { order: order.id }), {}, {
            preserveScroll: true,
            onSuccess: () => {
                applyFilters();
            },
            onError: (errors) => {
                console.error('Error completing rental:', errors);
            }
        });
    }
};

// Real-time notification functions
const setupRealTimeNotifications = () => {
    if (window.Echo) {
        const userId = page.props.auth.user.id;
        
        // Listen to private channel for user notifications
        echo = window.Echo.private(`notifications.${userId}`)
            .listen('.rental.status.updated', (e) => {
                handleRealTimeNotification(e);
            });

        // Also listen to branch notifications if user has branches
        props.branches.forEach(branch => {
            window.Echo.private(`branch.${branch.id}`)
                .listen('.rental.status.updated', (e) => {
                    handleRealTimeNotification(e);
                });
        });
    }
};

const handleRealTimeNotification = (event) => {
    const locale = document.documentElement.lang || 'en';
    
    // Get the appropriate message based on locale
    const message = event.message[locale] || event.message.en || 'Rental status updated';
    
    // Show toast notification
    showNotificationToast.value = true;
    notificationMessage.value = message;
    notificationToastClass.value = getNotificationClass(event.new_status);
    
    // Play sound if enabled
    if (event.sound_enabled && notificationSound.value) {
        try {
            notificationSound.value.play().catch(e => {
                console.log('Could not play notification sound:', e);
            });
        } catch (e) {
            console.log('Notification sound error:', e);
        }
    }
    
    // Auto hide after 5 seconds
    setTimeout(() => {
        hideNotificationToast();
    }, 5000);
    
    // Refresh the data
    applyFilters();
};

const getNotificationClass = (status) => {
    switch (status) {
        case 'approved':
            return 'border-green-500';
        case 'rejected':
            return 'border-red-500';
        case 'piece_sent':
            return 'border-blue-500';
        case 'rented':
            return 'border-purple-500';
        case 'available':
            return 'border-gray-500';
        default:
            return 'border-blue-500';
    }
};

const hideNotificationToast = () => {
    showNotificationToast.value = false;
    notificationMessage.value = '';
    notificationToastClass.value = '';
};

// Component lifecycle
onMounted(() => {
    setupRealTimeNotifications();
});

onUnmounted(() => {
    if (echo) {
        echo.leaveChannel();
    }
});
</script>